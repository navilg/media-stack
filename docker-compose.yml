version: "5.9"
name: media-stack

services:
  vpn:
    profiles: ["vpn"]
    container_name: vpn
    image: qmcgaw/gluetun:v3.39.0
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - OPENVPN_USER=8v5AjZCHTUbZzk9qoYxzcUDu
      - OPENVPN_PASSWORD=1TRTfegmMMo9Pj6hFriTXRat
      - RADARR_STATIC_CONTAINER_IP=172.20.0.7
      - SONARR_STATIC_CONTAINER_IP=172.20.0.5
      - READARR_STATIC_CONTAINER_IP=172.20.0.10
      - QBITTORRENT_STATIC_CONTAINER_IP=172.20.0.4
      - SERVER_COUNTRIES=United States
    networks:
      - mynetwork
    ports:
      - 5080:5080
      - 6881:6881
      - 6881:6881/udp
      - 9696:9696
    restart: "unless-stopped"

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:5.0.0-r2-ls359
    depends_on:
      - vpn
    network_mode: service:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=5080
    volumes:
      - qbittorrent-config:/config
      - /mnt/media:/downloads
    restart: "unless-stopped"

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    networks:
      mynetwork:
        ipv4_address: 172.20.0.7
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - 7878:7878
    volumes:
      - radarr-config:/config
      - /mnt/media:/downloads
    restart: "unless-stopped"

  sonarr:
    image: linuxserver/sonarr:4.0.1-develop
    container_name: sonarr
    networks:
      mynetwork:
        ipv4_address: 172.20.0.5
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - sonarr-config:/config
      - /mnt/media:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  # overseerr:
  #   image: sctx/overseerr:latest
  #   container_name: overseerr
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.20.0.11
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=UTC
  #     - LOG_LEVEL=debug
  #   ports:
  #     - 5055:5055
  #   volumes:
  #     - overseerr-config:/app/config
  #   restart: unless-stopped

  # plex:
  #   image: lscr.io/linuxserver/plex:latest
  #   container_name: plex
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.20.0.12
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #     - VERSION=docker
  #     - PLEX_CLAIM=  #optional
  #   volumes:
  #     - plex-config:/config
  #     - plex-config:/tv
  #     - plex-config:/movies
  #   restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    networks:
      mynetwork:
        ipv4_address: 172.20.0.10
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - readarr-config:/config
      - readarr-config:/books  #optional
      - /mnt/media:/downloads  #optional
    ports:
      - 8787:8787
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:latest
    depends_on:
      - vpn
    network_mode: service:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - prowlarr-config:/config
    restart: unless-stopped

  jellyseerr:
    profiles: ["vpn", "no-vpn"]
    image: fallenbagel/jellyseerr:2.0.1
    container_name: jellyseerr
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyseerr-config:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped  

  jellyfin:
    image: linuxserver/jellyfin:10.9.11
    container_name: jellyfin
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyfin-config:/config
      - /mnt/media:/data
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Optional, only if you want docker integration
      - ./homarr/configs:/app/data/configs
      - ./homarr/icons:/app/public/icons
      - ./homarr/data:/data
    ports:
      - 7575:7575
    restart: unless-stopped

  nginx:
    image: nginx:1.25.1-alpine
    container_name: nginx
    networks:
      - mynetwork
    volumes:
      - nginx-config:/etc/nginx
      - letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

volumes:
  vpn-config:
  radarr-config:
  sonarr-config:
  prowlarr-config:
  jellyfin-config:
  qbittorrent-config:
  nginx-config:
  letsencrypt:
  readarr-config:
  # plex-config:
  # overseerr-config:
  jellyseerr-config:

networks:
  mynetwork:
    external: true
